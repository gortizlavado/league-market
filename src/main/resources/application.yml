logging:
  level:
    es.gortizlavado.league.app: DEBUG

spring:
  application:
    name: market-microservice
  jpa:
    show-sql: true
    properties:
      hibernate:
        session.events.log.LOG_QUERIES_SLOWER_THAN_MS: 30
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        default_schema: ${spring.application.name}
        globally_quoted_identifiers: true
        format_sql: true
    hibernate:
      ddl-auto: none
  batch:
    job.enabled: false
    jdbc:
      table-prefix: ${spring.application.name}.BATCH_
      initialize-schema: always
  flyway:
    baseline-on-migrate: true
    baseline-version: 0
    locations:
      - classpath:db/migration/postgresql
    schemas: ${spring.application.name}
    init-sqls: CREATE SCHEMA IF NOT EXISTS "${spring.application.name}";
    user: sa
    password:

  cloud:
    function:
      routing-expression: headers['event_type']
    stream:
      function:
        routing.enabled: true
      bindings:
      # IN
        # <functionName> + -in- + <index>
        functionRouter-in-0:
          destination: executedBid
          group: ${spring.application.name}
          content-type: application/json
          binder: rabbit
          # retryable-exceptions ??
      # OUT
        communityChannel-out-0:
          destination: toCommunity
          binder: rabbit
      rabbit.binding:
        functionRouter-in-0:
          consumer:
            autoBindDlq: true
            republishToDlq: true
            transacted: true
        communityChannel-out-0:
          producer:
            transacted: true
            routing-key-expression: headers.leagueRoutingKey

feign:
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 20000

server:
  port: 8082
